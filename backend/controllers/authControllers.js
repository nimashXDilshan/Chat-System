import bcrypt from "bcryptjs";
import User from "../models/usermodel.js";
import generateTokenAndSetCookie from "../utils/generateToken.js";

export const signup = async (req, res) => {
    try {
        const { fullName, username, password, confirmpassword, gender } = req.body;

        // Check if all fields are provided
        if (!fullName || !username || !password || !confirmpassword || !gender) {
            return res.status(400).json({ message: "All fields are required." });
        }

        // Validate password match
        if (password != confirmpassword) {
            return res.status(400).json({ message: "Passwords don't match." });
        }

        // Check if username already exists
        const existingUser = await User.findOne({ username });
        if (existingUser) {
            return res.status(400).json({ message: "Username already exists." });
        }


        // Hash the password
         const salt = await bcrypt.genSalt(10);
        const hashedPassword = await bcrypt.hash(password, salt);

        // Set default profile pictures based on gender
        const boyProfilePic = `https://avatar.iram.liara.run/public/boy/?username=${username}`;
        const girlProfilePic = `https://avatar.iram.liara.run/public/girl/?username=${username}`;

        // Create a new user
        const newUser = new User({
            fullName,
            username,
            password:hashedPassword, // Store hashed password
            gender,
            profilePic: gender === "male" ? boyProfilePic : girlProfilePic,
        });

        // Save the user to the database
        if(newUser){
            //Generate jwt token here
            generateTokenAndSetCookie(newUser._id,res);
            
            await newUser.save();

        res.status(201).json({ 
            _id:newUser._id,//this id is generated by mongoose
            fullName:newUser.fullName,
            username:newUser.username,
            profilePic:newUser.profilePic
         });
        }else{
            res.status(500).json({ message: "Invalid user data" });
        }


    } catch (error) {
        console.error(error);
        res.status(500).json({ message: "An error occurred during signup." });
    }
};

export const login = (req, res) => {
    console.log("loginUser");
};

export const logout = (req, res) => {
    console.log("logoutUser");
};
